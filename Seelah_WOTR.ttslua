mT = {}

charType = 'Female Human Paladin'

--Character Base Skills
mT.Strength = {}
mT.Strength.die = 'd8'
mT.Strength.range = 4
mT.Strength.Melee = 3

mT.Dexterity = {}
mT.Dexterity.die = 'd4'
mT.Dexterity.range = 1
mT.Dexterity.Acrobatics = nil
mT.Dexterity.Disable = nil
mT.Dexterity.Ranged = nil
mT.Dexterity.Stealth = nil

mT.Constitution = {}
mT.Constitution.die = 'd8'
mT.Constitution.range = 2
mT.Constitution.Fortitude = 1

mT.Intelligence = {}
mT.Intelligence.die = 'd4'
mT.Intelligence.range = 1
mT.Intelligence.Arcane = nil
mT.Intelligence.Craft = nil
mT.Intelligence.Knowledge = nil

mT.Wisdom = {}
mT.Wisdom.die = 'd8'
mT.Wisdom.range = 3
mT.Wisdom.Divine = 1
mT.Wisdom.Knowledge = nil
mT.Wisdom.Perception = nil
mT.Wisdom.Survival = nil

mT.Charisma = {}
mT.Charisma.die = 'd10'
mT.Charisma.range = 4
mT.Charisma.Arcane = nil
mT.Charisma.Diplomacy = 1
mT.Charisma.Knowledge = nil;

--Character Base Powers
powerRole = 'r0_powers'

mT.r0_powers = {}
mT.r0_powers.name = 'Seelah'
mT.r0_powers.handSize = {4, 6}
mT.r0_powers.proficiencies = {'Weapons, Light Armors, Heavy Armors'}
mT.r0_powers.A = {'When you  attempt a check before you act, you may use your Charisma skill instead of any listed skill'}
mT.r0_powers.B = {'You may discard the top card of your deck to add 1d6 to any check by a character at your location',
                  'You may discard the top card of your deck to add 1d6 to any check by a character at your location. (If that character defeats a monster on that check, he may draw a card)'}
mT.r0_powers.C = {'When you acquire a boon with the Corrupted trait, bury it'}

mT.r1_powers = {}
mT.r1_powers.name = 'Seelah (Inheritor\'s Blade)'
mT.r1_powers.handSize = {4, 7}
mT.r1_powers.proficiencies = {'Weapons, Light Armors, Heavy Armors'}
mT.r1_powers.A = {'When you  attempt a check before you act, you may use your Charisma skill instead of any listed skill'}
mT.r1_powers.B = {'You may discard the top card of your deck to add 1d6 to any check by a character at your location',
                  'You may discard the top card of your deck to add 1d6 to any check by a character at your location. (If that character defeats a monster on that check, he may draw a card)',
                  'You may discard the top card of your deck to add 1d6 to any check by a character at your location. (If that character defeats a monster on that check, he may draw a card) (If the top card has the heavy armor or sword trait, recharge it instead of discarding it)'}
mT.r1_powers.C = {'When you acquire a boon with the Corrupted trait, bury it',
                  'When you acquire a boon with the Corrupted trait, bury it. (If it does not have that trait, you may give it to another character at your location)'}
mT.r1_powers.D = {'',
                  'You may be dealt 1 Combat damage to reduce Combat damage dealt to a character at your location by 1',
                  'You may be dealt 1 Combat damage to reduce Combat (or any type of) damage dealt to a character at your location by 1',
                  'You may be dealt 1 Combat damage to reduce Combat (or any type of) damage dealt to a character at your location by 2',
                  'You may be dealt 1 Combat damage to reduce Combat (or any type of) damage dealt to a character at your location by 3'}
mT.r1_powers.E = {'',
                  'When you play a blessing that has the Iomedae trait, a character at your location may shuffle an ally in their discard pile into his deck'}

mT.r2_powers = {}
mT.r2_powers.name = 'Seelah (Wardstone Sentry)'
mT.r2_powers.handSize = {4, 6}
mT.r2_powers.proficiencies = {'Weapons, Light Armors, Heavy Armors'}
mT.r2_powers.A = {'When you  attempt a check before you act, you may use your Charisma skill instead of any listed skill',
                  'When you  attempt a check before you act, you may use your Charisma skill (+2) instead of any listed skill',
                  'When you  attempt a check before you act, you may use your Charisma skill (+4) instead of any listed skill'}
mT.r2_powers.B = {'You may discard the top card of your deck to add 1d6 to any check by a character at your location',
                  'You may discard the top card of your deck to add 1d6 (+1) to any check by a character at your location',
                  'You may discard the top card of your deck to add 1d6 (+2) to any check by a character at your location',
                  'You may discard the top card of your deck to add 1d6 (+3) to any check by a character at your location',
                  'You may discard the top card of your deck to add 1d6 (+3) to any check by a character at your location. (If that character defeats a monster on that check, he may draw a card)'}
mT.r2_powers.C = {'When you acquire a boon with the Corrupted trait, bury it',
                  'When you acquire a boon with the Corrupted trait, bury it. (If it is your turn, you may then explore again)',}
mT.r2_powers.D = {'',
                  'You may add 1d8 and the Magic trait to your check to defeat a bane that has the Demon trait',
                  'You may add 1d8 and the Magic trait to your check to defeat a bane that has the Demon (or Undead) trait'}
mT.r2_powers.E = {'',
                  'When another character encounters a monster that has the Cultist or Demon trait, you may immediately move to his location'}

--Character Base Cards
favouredType = 'Blessing'
cohort = ''

mT.cards = {}
mT.cards.weapon = {4, 6}
mT.cards.spell = {1, 3}
mT.cards.armor = {3, 4}
mT.cards.item = {1, 1}
mT.cards.ally = {2, 4}
mT.cards.blessing = {4, 7}

--Character upgraded skills
savedStats = {}

savedStats.Strength = 0
savedStats.Dexterity = 0
savedStats.Constitution = 0
savedStats.Intelligence = 0
savedStats.Wisdom = 0
savedStats.Charisma = 0

savedStats.proficiencies = 1
savedStats.weapon = 0
savedStats.spell = 0
savedStats.armor = 0
savedStats.item = 0
savedStats.ally = 0
savedStats.blessing = 0

savedStats.role = 'r0_powers'
savedStats.handSize = 0

savedStats.A = 1
savedStats.B = 1
savedStats.C = 1
savedStats.D = 1
savedStats.E = 1
savedStats.F = 1

player = ''

function onLoad(save_state)
  if save_state ~= '' then
    savedStats = JSON.decode(save_state)
  end
end

function onSave()
		saved_data = JSON.encode(savedStats)

	--Uncomment this line to reset the save data:
	--saved_data = ''
	return saved_data
end

function onDropped(player_color)
  player = player_color
end

function getPlayer()
  return player
end

function getData()
  return mT
end

function getStats()
  return savedStats
end

function getType()
  return charType
end

function getCohort()
  return cohort
end

function getFavouredType()
  return favouredType
end

function setStats(params)
  savedStats[params[1]] = params[2]
end

function setRole(params)
  savedStats.role = params[1]
end