--Master Table
mT = {}

charType = 'Female Human Hunter'

--Skills Tables
mT.Strength = {}
mT.Strength.die = 'd6'
mT.Strength.range = 1
mT.Strength.Melee = nil

mT.Dexterity = {}
mT.Dexterity.die = 'd12'
mT.Dexterity.range = 4
mT.Dexterity.Acrobatics = nil
mT.Dexterity.Disable = nil
mT.Dexterity.Ranged = 1
mT.Dexterity.Stealth = 2

mT.Constitution = {}
mT.Constitution.die = 'd6'
mT.Constitution.range = 2
mT.Constitution.Fortitude = nil

mT.Intelligence = {}
mT.Intelligence.die = 'd6'
mT.Intelligence.range = 2
mT.Intelligence.Arcane = nil
mT.Intelligence.Craft = nil
mT.Intelligence.Knowledge = nil

mT.Wisdom = {}
mT.Wisdom.die = 'd8'
mT.Wisdom.range = 4
mT.Wisdom.Divine = 1
mT.Wisdom.Knowledge = nil
mT.Wisdom.Perception = nil
mT.Wisdom.Survival = 3

mT.Charisma = {}
mT.Charisma.die = 'd4'
mT.Charisma.range = 2
mT.Charisma.Arcane = nil
mT.Charisma.Diplomacy = nil
mT.Charisma.Knowledge = nil;

--Character Base Powers

powerRole = 'r0_powers'

mT.r0_powers = {}
mT.r0_powers.name = 'Adowyn'
mT.r0_powers.handSize = {5, 7}
mT.r0_powers.proficiencies = {'Light Armors, Weapons'}
mT.r0_powers.A = {'At the start of your turn, you may search your deck or your discard pile for a cohort and put it into your hand, then recharge a card',
                  'At the start of your turn, you may search your deck or your discard pile for a cohort (or a card that has the animal trait) and put it into your hand, then recharge a card'}
mT.r0_powers.B = {'You may recharge a card to evade a summoned bane',
                  'You may recharge a card to evade a summoned bane (or discard a card to allow another player to do so)'}

mT.r1_powers = {}
mT.r1_powers.name = 'Adowyn (Pack Leader)'
mT.r1_powers.handSize = {5, 7}
mT.r1_powers.proficiencies = {'Light Armors, Weapons'}
mT.r1_powers.A = {'At the start of your turn, you may search your deck or your discard pile for a cohort and put it into your hand, then recharge a card',
                  'At the start of your turn, you may search your deck or your discard pile for a cohort (or a card that has the animal trait) and put it into your hand, then recharge a card'}
mT.r1_powers.B = {'You may recharge a card to evade a summoned bane',
                  'You may recharge a card to evade a summoned bane (or discard a card to allow another player to do so)'}
mT.r1_powers.C = {'',
                  'Before you would discard an ally for its power, you may recharge a random card from your discard pile',
                  'Before you would discard an ally for its power, you may recharge a random card (or a card that has the animal trait) from your discard pile'}
mT.r1_powers.D = {'',
                  'You may reveal a card that has the animal trait to add 1d4 to your combat check',
                  'You may reveal a card that has the animal trait to add 1d4 (+1) to your combat check',
                  'You may reveal a card that has the animal trait to add 1d4 (+2) to your combat check',
                  'You may reveal a card that has the animal trait to add 1d4 (+2) to your combat check (or your check)'}
mT.r1_powers.E = {'',
                  'You may recharge a card that has the animal trait to reduce combat damage dealt to you by 2, or bury a card that has the animal trait to reduce all damage dealt to you to 0',
                  'You may recharge a card that has the animal trait to reduce combat damage dealt to you by 2, or bury (or discard) a card that has the animal trait to reduce all damage dealt to you to 0'}

mT.r2_powers = {}
mT.r2_powers.name = 'Adowyn (Blight Scout)'
mT.r2_powers.handSize = {5, 8}
mT.r2_powers.proficiencies = {'Light Armors, Weapons'}
mT.r2_powers.A = {'At the start of your turn, you may search your deck or your discard pile for a cohort and put it into your hand, then recharge a card',
                  'At the start of your turn, you may search your deck or your discard pile for a cohort (or a card that has the animal trait) and put it into your hand, then recharge a card',
                  'At the start of your turn, you may search your deck or your discard pile for a cohort (or a card that has the animal trait) (or a weapon) and put it into your hand, then recharge a card'}
mT.r2_powers.B = {'You may recharge a card to evade a summoned bane',
                  'You may recharge a card to evade a summoned bane (or discard a card to allow another player to do so)'}
mT.r2_powers.C = {'',
                  'You may recharge a card to reduce damage dealt to you before you act to 1',
                  'You may recharge a card to reduce damage dealt to you before you act to 0'}
mT.r2_powers.D = {'',
                  'You may shuffle a cohort into your deck to add your stealth skill to your combat check'}
mT.r2_powers.E = {'',
                  'When you examine the top of a location deck, you may recharge a card to examine an additional card'}
mT.r2_powers.F = {'',
                  'Add 1d4 to your non-combat check if you are in a location that has the abyssal trait',
                  'Add 1d8 to your non-combat check if you are in a location that has the abyssal trait'}

--Character Base Cards
favouredType = 'Ally'
cohort = 'Leryn'

mT.cards = {}
mT.cards.weapon = {3, 6}
mT.cards.spell = {2, 3}
mT.cards.armor = {1, 2}
mT.cards.item = {2, 4}
mT.cards.ally = {3, 5}
mT.cards.blessing = {4, 5}

--Character upgraded skills
savedStats = {}

savedStats.Strength = 0
savedStats.Dexterity = 0
savedStats.Constitution = 0
savedStats.Intelligence = 0
savedStats.Wisdom = 0
savedStats.Charisma = 0

savedStats.proficiencies = 1
savedStats.weapon = 0
savedStats.spell = 0
savedStats.armor = 0
savedStats.item = 0
savedStats.ally = 0
savedStats.blessing = 0

savedStats.role = 'r0_powers'
savedStats.handSize = 0

savedStats.A = 1
savedStats.B = 1
savedStats.C = 1
savedStats.D = 1
savedStats.E = 1
savedStats.F = 1
savedStats.G = 1
savedStats.H = 1

player = ''

function onLoad(save_state)
  if save_state ~= '' then
    savedStats = JSON.decode(save_state)
  end
end

function onSave()
		saved_data = JSON.encode(savedStats)

	--Uncomment this line to reset the save data:
	--saved_data = ''
	return saved_data
end

function onDropped(player_color)
  player = player_color
end

function getPlayer()
  return player
end

function getData()
  return mT
end

function getStats()
  return savedStats
end

function getType()
  return charType
end

function getCohort()
  return cohort
end

function getFavouredType()
  return favouredType
end

function setStats(params)
  savedStats[params[1]] = params[2]
end

function setRole(params)
  savedStats.role = params[1]
end